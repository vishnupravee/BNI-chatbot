{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dell\\\\bnichat-bot\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport ReactMarkdown from 'react-markdown';\nimport SpeechRecognition, { useSpeechRecognition } from 'react-speech-recognition';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState('');\n\n  // --- Voice Recognition Hook Setup ---\n  const {\n    transcript,\n    listening,\n    resetTranscript,\n    browserSupportsSpeechRecognition\n  } = useSpeechRecognition();\n\n  // --- FIX FOR SPEECH SYNTHESIS ---\n  // \"Wake up\" the speech synthesis engine when the component loads\n  useEffect(() => {\n    const warmUpSpeechSynthesis = () => {\n      window.speechSynthesis.getVoices();\n    };\n    warmUpSpeechSynthesis();\n  }, []);\n  // --- END OF FIX ---\n\n  // Update the input field with the live transcript\n  useEffect(() => {\n    setInput(transcript);\n  }, [transcript]);\n\n  // Main Send Function (for both text and voice)\n  const handleSend = async messageToSend => {\n    // Clear the input and transcript right away\n    setInput('');\n    resetTranscript();\n    const userMessage = {\n      text: messageToSend,\n      sender: 'user'\n    };\n    setMessages(prevMessages => [...prevMessages, userMessage]);\n    try {\n      const response = await fetch('http://localhost:5001/api/chat', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          message: messageToSend\n        })\n      });\n      const data = await response.json();\n      const botMessage = {\n        text: data.reply,\n        sender: 'bot'\n      };\n      setMessages(prevMessages => [...prevMessages, botMessage]);\n\n      // --- Text-to-Speech (Voice Output) with FIX ---\n      window.speechSynthesis.cancel(); // Clear any previous utterances\n      const utterance = new SpeechSynthesisUtterance(data.reply);\n      window.speechSynthesis.speak(utterance);\n      // --- End of Text-to-Speech ---\n    } catch (error) {\n      console.error('Error fetching bot reply:', error);\n      const errorMessage = {\n        text: 'Sorry, I am having trouble connecting.',\n        sender: 'bot'\n      };\n      setMessages(prevMessages => [...prevMessages, errorMessage]);\n    }\n  };\n  const handleTextSubmit = () => {\n    if (input.trim() === '') return;\n    handleSend(input);\n  };\n  const handleVoiceRecording = () => {\n    if (listening) {\n      SpeechRecognition.stopListening();\n      // After stopping, if there's a transcript, send it\n      if (transcript.trim() !== '') {\n        handleSend(transcript);\n      }\n    } else {\n      resetTranscript();\n      SpeechRecognition.startListening({\n        continuous: false\n      }); // continuous: false is often more reliable\n    }\n  };\n\n  // Check for browser support\n  if (!browserSupportsSpeechRecognition) {\n    return /*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"Sorry, your browser does not support speech recognition.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"/logo.png\",\n        className: \"App-logo\",\n        alt: \"logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"BNI-ChatBot\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-window\",\n      children: messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `message ${msg.sender}`,\n        children: msg.sender === 'bot' ? /*#__PURE__*/_jsxDEV(ReactMarkdown, {\n          children: msg.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: msg.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 15\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-input-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-input\",\n        children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n          value: input,\n          onChange: e => setInput(e.target.value),\n          placeholder: listening ? \"Listening...\" : \"Ask a business-related query...\",\n          rows: \"1\",\n          onKeyPress: e => {\n            if (e.key === 'Enter' && !e.shiftKey) {\n              e.preventDefault(); // Prevents new line on Enter\n              handleTextSubmit();\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleVoiceRecording,\n          className: `mic-button ${listening ? 'listening' : ''}`,\n          children: \"\\uD83C\\uDFA4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleTextSubmit,\n          className: \"send-button\",\n          children: \"\\u2191\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"FxW3+q/mUBC1CA10nSmJ3Lcm3T0=\", false, function () {\n  return [useSpeechRecognition];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","ReactMarkdown","SpeechRecognition","useSpeechRecognition","jsxDEV","_jsxDEV","App","_s","messages","setMessages","input","setInput","transcript","listening","resetTranscript","browserSupportsSpeechRecognition","warmUpSpeechSynthesis","window","speechSynthesis","getVoices","handleSend","messageToSend","userMessage","text","sender","prevMessages","response","fetch","method","headers","body","JSON","stringify","message","data","json","botMessage","reply","cancel","utterance","SpeechSynthesisUtterance","speak","error","console","errorMessage","handleTextSubmit","trim","handleVoiceRecording","stopListening","startListening","continuous","children","fileName","_jsxFileName","lineNumber","columnNumber","className","src","alt","map","msg","index","value","onChange","e","target","placeholder","rows","onKeyPress","key","shiftKey","preventDefault","onClick","_c","$RefreshReg$"],"sources":["C:/Users/dell/bnichat-bot/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport ReactMarkdown from 'react-markdown';\nimport SpeechRecognition, { useSpeechRecognition } from 'react-speech-recognition';\nimport './App.css';\n\nfunction App() {\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState('');\n\n  // --- Voice Recognition Hook Setup ---\n  const {\n    transcript,\n    listening,\n    resetTranscript,\n    browserSupportsSpeechRecognition\n  } = useSpeechRecognition();\n\n  // --- FIX FOR SPEECH SYNTHESIS ---\n  // \"Wake up\" the speech synthesis engine when the component loads\n  useEffect(() => {\n    const warmUpSpeechSynthesis = () => {\n      window.speechSynthesis.getVoices();\n    };\n    warmUpSpeechSynthesis();\n  }, []);\n  // --- END OF FIX ---\n\n  // Update the input field with the live transcript\n  useEffect(() => {\n    setInput(transcript);\n  }, [transcript]);\n\n  // Main Send Function (for both text and voice)\n  const handleSend = async (messageToSend) => {\n    // Clear the input and transcript right away\n    setInput('');\n    resetTranscript();\n\n    const userMessage = { text: messageToSend, sender: 'user' };\n    setMessages(prevMessages => [...prevMessages, userMessage]);\n    \n    try {\n      const response = await fetch('http://localhost:5001/api/chat', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ message: messageToSend }),\n      });\n\n      const data = await response.json();\n      const botMessage = { text: data.reply, sender: 'bot' };\n      setMessages(prevMessages => [...prevMessages, botMessage]);\n\n      // --- Text-to-Speech (Voice Output) with FIX ---\n      window.speechSynthesis.cancel(); // Clear any previous utterances\n      const utterance = new SpeechSynthesisUtterance(data.reply);\n      window.speechSynthesis.speak(utterance);\n      // --- End of Text-to-Speech ---\n\n    } catch (error) {\n      console.error('Error fetching bot reply:', error);\n      const errorMessage = { text: 'Sorry, I am having trouble connecting.', sender: 'bot' };\n      setMessages(prevMessages => [...prevMessages, errorMessage]);\n    }\n  };\n\n  const handleTextSubmit = () => {\n    if (input.trim() === '') return;\n    handleSend(input);\n  };\n\n  const handleVoiceRecording = () => {\n    if (listening) {\n      SpeechRecognition.stopListening();\n      // After stopping, if there's a transcript, send it\n      if (transcript.trim() !== '') {\n        handleSend(transcript);\n      }\n    } else {\n      resetTranscript();\n      SpeechRecognition.startListening({ continuous: false }); // continuous: false is often more reliable\n    }\n  };\n\n  // Check for browser support\n  if (!browserSupportsSpeechRecognition) {\n    return <span>Sorry, your browser does not support speech recognition.</span>;\n  }\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src=\"/logo.png\" className=\"App-logo\" alt=\"logo\" />\n        <h1>BNI-ChatBot</h1>\n      </header>\n      <div className=\"chat-window\">\n        {messages.map((msg, index) => (\n          <div key={index} className={`message ${msg.sender}`}>\n            {msg.sender === 'bot' ? (\n              <ReactMarkdown>{msg.text}</ReactMarkdown>\n            ) : (\n              <p>{msg.text}</p>\n            )}\n          </div>\n        ))}\n      </div>\n      <div className=\"chat-input-container\">\n        <div className=\"chat-input\">\n          <textarea\n            value={input}\n            onChange={(e) => setInput(e.target.value)}\n            placeholder={listening ? \"Listening...\" : \"Ask a business-related query...\"}\n            rows=\"1\"\n            onKeyPress={(e) => {\n              if (e.key === 'Enter' && !e.shiftKey) {\n                e.preventDefault(); // Prevents new line on Enter\n                handleTextSubmit();\n              }\n            }}\n          />\n          <button \n            onClick={handleVoiceRecording} \n            className={`mic-button ${listening ? 'listening' : ''}`}\n          >\n            🎤\n          </button>\n          <button onClick={handleTextSubmit} className=\"send-button\">↑</button>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,aAAa,MAAM,gBAAgB;AAC1C,OAAOC,iBAAiB,IAAIC,oBAAoB,QAAQ,0BAA0B;AAClF,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnB,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACW,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;;EAEtC;EACA,MAAM;IACJa,UAAU;IACVC,SAAS;IACTC,eAAe;IACfC;EACF,CAAC,GAAGZ,oBAAoB,CAAC,CAAC;;EAE1B;EACA;EACAH,SAAS,CAAC,MAAM;IACd,MAAMgB,qBAAqB,GAAGA,CAAA,KAAM;MAClCC,MAAM,CAACC,eAAe,CAACC,SAAS,CAAC,CAAC;IACpC,CAAC;IACDH,qBAAqB,CAAC,CAAC;EACzB,CAAC,EAAE,EAAE,CAAC;EACN;;EAEA;EACAhB,SAAS,CAAC,MAAM;IACdW,QAAQ,CAACC,UAAU,CAAC;EACtB,CAAC,EAAE,CAACA,UAAU,CAAC,CAAC;;EAEhB;EACA,MAAMQ,UAAU,GAAG,MAAOC,aAAa,IAAK;IAC1C;IACAV,QAAQ,CAAC,EAAE,CAAC;IACZG,eAAe,CAAC,CAAC;IAEjB,MAAMQ,WAAW,GAAG;MAAEC,IAAI,EAAEF,aAAa;MAAEG,MAAM,EAAE;IAAO,CAAC;IAC3Df,WAAW,CAACgB,YAAY,IAAI,CAAC,GAAGA,YAAY,EAAEH,WAAW,CAAC,CAAC;IAE3D,IAAI;MACF,MAAMI,QAAQ,GAAG,MAAMC,KAAK,CAAC,gCAAgC,EAAE;QAC7DC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UAAE,cAAc,EAAE;QAAmB,CAAC;QAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAEC,OAAO,EAAEZ;QAAc,CAAC;MACjD,CAAC,CAAC;MAEF,MAAMa,IAAI,GAAG,MAAMR,QAAQ,CAACS,IAAI,CAAC,CAAC;MAClC,MAAMC,UAAU,GAAG;QAAEb,IAAI,EAAEW,IAAI,CAACG,KAAK;QAAEb,MAAM,EAAE;MAAM,CAAC;MACtDf,WAAW,CAACgB,YAAY,IAAI,CAAC,GAAGA,YAAY,EAAEW,UAAU,CAAC,CAAC;;MAE1D;MACAnB,MAAM,CAACC,eAAe,CAACoB,MAAM,CAAC,CAAC,CAAC,CAAC;MACjC,MAAMC,SAAS,GAAG,IAAIC,wBAAwB,CAACN,IAAI,CAACG,KAAK,CAAC;MAC1DpB,MAAM,CAACC,eAAe,CAACuB,KAAK,CAACF,SAAS,CAAC;MACvC;IAEF,CAAC,CAAC,OAAOG,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;MACjD,MAAME,YAAY,GAAG;QAAErB,IAAI,EAAE,wCAAwC;QAAEC,MAAM,EAAE;MAAM,CAAC;MACtFf,WAAW,CAACgB,YAAY,IAAI,CAAC,GAAGA,YAAY,EAAEmB,YAAY,CAAC,CAAC;IAC9D;EACF,CAAC;EAED,MAAMC,gBAAgB,GAAGA,CAAA,KAAM;IAC7B,IAAInC,KAAK,CAACoC,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;IACzB1B,UAAU,CAACV,KAAK,CAAC;EACnB,CAAC;EAED,MAAMqC,oBAAoB,GAAGA,CAAA,KAAM;IACjC,IAAIlC,SAAS,EAAE;MACbX,iBAAiB,CAAC8C,aAAa,CAAC,CAAC;MACjC;MACA,IAAIpC,UAAU,CAACkC,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;QAC5B1B,UAAU,CAACR,UAAU,CAAC;MACxB;IACF,CAAC,MAAM;MACLE,eAAe,CAAC,CAAC;MACjBZ,iBAAiB,CAAC+C,cAAc,CAAC;QAAEC,UAAU,EAAE;MAAM,CAAC,CAAC,CAAC,CAAC;IAC3D;EACF,CAAC;;EAED;EACA,IAAI,CAACnC,gCAAgC,EAAE;IACrC,oBAAOV,OAAA;MAAA8C,QAAA,EAAM;IAAwD;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAC9E;EAEA,oBACElD,OAAA;IAAKmD,SAAS,EAAC,KAAK;IAAAL,QAAA,gBAClB9C,OAAA;MAAQmD,SAAS,EAAC,YAAY;MAAAL,QAAA,gBAC5B9C,OAAA;QAAKoD,GAAG,EAAC,WAAW;QAACD,SAAS,EAAC,UAAU;QAACE,GAAG,EAAC;MAAM;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACvDlD,OAAA;QAAA8C,QAAA,EAAI;MAAW;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACd,CAAC,eACTlD,OAAA;MAAKmD,SAAS,EAAC,aAAa;MAAAL,QAAA,EACzB3C,QAAQ,CAACmD,GAAG,CAAC,CAACC,GAAG,EAAEC,KAAK,kBACvBxD,OAAA;QAAiBmD,SAAS,EAAE,WAAWI,GAAG,CAACpC,MAAM,EAAG;QAAA2B,QAAA,EACjDS,GAAG,CAACpC,MAAM,KAAK,KAAK,gBACnBnB,OAAA,CAACJ,aAAa;UAAAkD,QAAA,EAAES,GAAG,CAACrC;QAAI;UAAA6B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAgB,CAAC,gBAEzClD,OAAA;UAAA8C,QAAA,EAAIS,GAAG,CAACrC;QAAI;UAAA6B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI;MACjB,GALOM,KAAK;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAMV,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eACNlD,OAAA;MAAKmD,SAAS,EAAC,sBAAsB;MAAAL,QAAA,eACnC9C,OAAA;QAAKmD,SAAS,EAAC,YAAY;QAAAL,QAAA,gBACzB9C,OAAA;UACEyD,KAAK,EAAEpD,KAAM;UACbqD,QAAQ,EAAGC,CAAC,IAAKrD,QAAQ,CAACqD,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;UAC1CI,WAAW,EAAErD,SAAS,GAAG,cAAc,GAAG,iCAAkC;UAC5EsD,IAAI,EAAC,GAAG;UACRC,UAAU,EAAGJ,CAAC,IAAK;YACjB,IAAIA,CAAC,CAACK,GAAG,KAAK,OAAO,IAAI,CAACL,CAAC,CAACM,QAAQ,EAAE;cACpCN,CAAC,CAACO,cAAc,CAAC,CAAC,CAAC,CAAC;cACpB1B,gBAAgB,CAAC,CAAC;YACpB;UACF;QAAE;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC,eACFlD,OAAA;UACEmE,OAAO,EAAEzB,oBAAqB;UAC9BS,SAAS,EAAE,cAAc3C,SAAS,GAAG,WAAW,GAAG,EAAE,EAAG;UAAAsC,QAAA,EACzD;QAED;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACTlD,OAAA;UAAQmE,OAAO,EAAE3B,gBAAiB;UAACW,SAAS,EAAC,aAAa;UAAAL,QAAA,EAAC;QAAC;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAClE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAAChD,EAAA,CA7HQD,GAAG;EAAA,QAUNH,oBAAoB;AAAA;AAAAsE,EAAA,GAVjBnE,GAAG;AA+HZ,eAAeA,GAAG;AAAC,IAAAmE,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}