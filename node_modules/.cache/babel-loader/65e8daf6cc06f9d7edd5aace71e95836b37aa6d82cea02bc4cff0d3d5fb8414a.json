{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dell\\\\bnichat-bot\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport ReactMarkdown from 'react-markdown';\n// Import the speech recognition hook\nimport SpeechRecognition, { useSpeechRecognition } from 'react-speech-recognition';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState('');\n\n  // --- Voice Recognition Hook Setup ---\n  const {\n    transcript,\n    listening,\n    resetTranscript,\n    browserSupportsSpeechRecognition\n  } = useSpeechRecognition();\n\n  // Update the input field with the live transcript\n  useEffect(() => {\n    setInput(transcript);\n  }, [transcript]);\n\n  // --- Main Send Function (for both text and voice) ---\n  const handleSend = async messageToSend => {\n    const userMessage = {\n      text: messageToSend,\n      sender: 'user'\n    };\n    setMessages(prevMessages => [...prevMessages, userMessage]);\n    try {\n      const response = await fetch('http://localhost:5001/api/chat', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          message: messageToSend\n        })\n      });\n      const data = await response.json();\n      const botMessage = {\n        text: data.reply,\n        sender: 'bot'\n      };\n      setMessages(prevMessages => [...prevMessages, botMessage]);\n\n      // --- Text-to-Speech (Voice Output) ---\n      const utterance = new SpeechSynthesisUtterance(data.reply);\n      window.speechSynthesis.speak(utterance);\n      // --- End of Text-to-Speech ---\n    } catch (error) {\n      console.error('Error fetching bot reply:', error);\n      const errorMessage = {\n        text: 'Sorry, I am having trouble connecting.',\n        sender: 'bot'\n      };\n      setMessages(prevMessages => [...prevMessages, errorMessage]);\n    }\n  };\n  const handleTextSubmit = () => {\n    if (input.trim() === '') return;\n    handleSend(input);\n    setInput('');\n    resetTranscript();\n  };\n  const handleVoiceRecording = () => {\n    if (listening) {\n      SpeechRecognition.stopListening();\n      // The transcript will be in the input field, user can press send\n    } else {\n      resetTranscript();\n      SpeechRecognition.startListening({\n        continuous: true\n      });\n    }\n  };\n  if (!browserSupportsSpeechRecognition) {\n    return /*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"Sorry, your browser does not support speech recognition.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"/logo.png\",\n        className: \"App-logo\",\n        alt: \"logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"BNI-ChatBot\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-window\",\n      children: messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `message ${msg.sender}`,\n        children: msg.sender === 'bot' ? /*#__PURE__*/_jsxDEV(ReactMarkdown, {\n          children: msg.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: msg.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 15\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-input-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-input\",\n        children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n          value: input,\n          onChange: e => setInput(e.target.value),\n          placeholder: listening ? \"Listening...\" : \"Ask a business-related query...\",\n          rows: \"1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleVoiceRecording,\n          className: `mic-button ${listening ? 'listening' : ''}`,\n          children: \"\\uD83C\\uDFA4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleTextSubmit,\n          className: \"send-button\",\n          children: \"\\u2191\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"vhGefP5G9xeinAJj7a5aTkzY7u0=\", false, function () {\n  return [useSpeechRecognition];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","ReactMarkdown","SpeechRecognition","useSpeechRecognition","jsxDEV","_jsxDEV","App","_s","messages","setMessages","input","setInput","transcript","listening","resetTranscript","browserSupportsSpeechRecognition","handleSend","messageToSend","userMessage","text","sender","prevMessages","response","fetch","method","headers","body","JSON","stringify","message","data","json","botMessage","reply","utterance","SpeechSynthesisUtterance","window","speechSynthesis","speak","error","console","errorMessage","handleTextSubmit","trim","handleVoiceRecording","stopListening","startListening","continuous","children","fileName","_jsxFileName","lineNumber","columnNumber","className","src","alt","map","msg","index","value","onChange","e","target","placeholder","rows","onClick","_c","$RefreshReg$"],"sources":["C:/Users/dell/bnichat-bot/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport ReactMarkdown from 'react-markdown';\n// Import the speech recognition hook\nimport SpeechRecognition, { useSpeechRecognition } from 'react-speech-recognition';\nimport './App.css';\n\nfunction App() {\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState('');\n\n  // --- Voice Recognition Hook Setup ---\n  const {\n    transcript,\n    listening,\n    resetTranscript,\n    browserSupportsSpeechRecognition\n  } = useSpeechRecognition();\n\n  // Update the input field with the live transcript\n  useEffect(() => {\n    setInput(transcript);\n  }, [transcript]);\n\n  // --- Main Send Function (for both text and voice) ---\n  const handleSend = async (messageToSend) => {\n    const userMessage = { text: messageToSend, sender: 'user' };\n    setMessages(prevMessages => [...prevMessages, userMessage]);\n    \n    try {\n      const response = await fetch('http://localhost:5001/api/chat', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ message: messageToSend }),\n      });\n\n      const data = await response.json();\n      const botMessage = { text: data.reply, sender: 'bot' };\n      setMessages(prevMessages => [...prevMessages, botMessage]);\n\n      // --- Text-to-Speech (Voice Output) ---\n      const utterance = new SpeechSynthesisUtterance(data.reply);\n      window.speechSynthesis.speak(utterance);\n      // --- End of Text-to-Speech ---\n\n    } catch (error) {\n      console.error('Error fetching bot reply:', error);\n      const errorMessage = { text: 'Sorry, I am having trouble connecting.', sender: 'bot' };\n      setMessages(prevMessages => [...prevMessages, errorMessage]);\n    }\n  };\n\n  const handleTextSubmit = () => {\n    if (input.trim() === '') return;\n    handleSend(input);\n    setInput('');\n    resetTranscript();\n  };\n\n  const handleVoiceRecording = () => {\n    if (listening) {\n      SpeechRecognition.stopListening();\n      // The transcript will be in the input field, user can press send\n    } else {\n      resetTranscript();\n      SpeechRecognition.startListening({ continuous: true });\n    }\n  };\n\n  if (!browserSupportsSpeechRecognition) {\n    return <span>Sorry, your browser does not support speech recognition.</span>;\n  }\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src=\"/logo.png\" className=\"App-logo\" alt=\"logo\" />\n        <h1>BNI-ChatBot</h1>\n      </header>\n      <div className=\"chat-window\">\n        {messages.map((msg, index) => (\n          <div key={index} className={`message ${msg.sender}`}>\n            {msg.sender === 'bot' ? (\n              <ReactMarkdown>{msg.text}</ReactMarkdown>\n            ) : (\n              <p>{msg.text}</p>\n            )}\n          </div>\n        ))}\n      </div>\n      <div className=\"chat-input-container\">\n        <div className=\"chat-input\">\n          <textarea\n            value={input}\n            onChange={(e) => setInput(e.target.value)}\n            placeholder={listening ? \"Listening...\" : \"Ask a business-related query...\"}\n            rows=\"1\"\n          />\n          {/* Microphone Button */}\n          <button \n            onClick={handleVoiceRecording} \n            className={`mic-button ${listening ? 'listening' : ''}`}\n          >\n            🎤\n          </button>\n          {/* Send Button */}\n          <button onClick={handleTextSubmit} className=\"send-button\">↑</button>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}