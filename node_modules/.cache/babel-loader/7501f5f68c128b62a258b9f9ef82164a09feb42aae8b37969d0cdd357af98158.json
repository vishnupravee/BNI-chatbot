{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dell\\\\bnichat-bot\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport ReactMarkdown from 'react-markdown';\nimport SpeechRecognition, { useSpeechRecognition } from 'react-speech-recognition';\nimport './App.css';\n\n// --- SVG Icons for Messages ---\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserIcon = () => /*#__PURE__*/_jsxDEV(\"svg\", {\n  width: \"30\",\n  height: \"30\",\n  viewBox: \"0 0 24 24\",\n  fill: \"#d9d9e9\",\n  xmlns: \"http://www.w3.org/2000/svg\",\n  children: /*#__PURE__*/_jsxDEV(\"path\", {\n    d: \"M12 12c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm0 2c-2.67 0-8 1.34-8 4v2h16v-2c0-2.66-5.33-4-8-4z\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 8,\n  columnNumber: 3\n}, this);\n_c = UserIcon;\nconst BotIcon = ({\n  logoSrc\n}) => /*#__PURE__*/_jsxDEV(\"img\", {\n  src: logoSrc,\n  alt: \"bot icon\",\n  style: {\n    width: '30px',\n    height: '30px',\n    borderRadius: '4px'\n  }\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 14,\n  columnNumber: 3\n}, this);\n_c2 = BotIcon;\nfunction App() {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState('');\n  const chatWindowRef = useRef(null);\n  const {\n    transcript,\n    listening,\n    resetTranscript,\n    browserSupportsSpeechRecognition\n  } = useSpeechRecognition();\n  useEffect(() => {\n    window.speechSynthesis.getVoices();\n  }, []);\n  useEffect(() => {\n    setInput(transcript);\n  }, [transcript]);\n\n  // Auto-scroll to the bottom when new messages are added\n  useEffect(() => {\n    if (chatWindowRef.current) {\n      chatWindowRef.current.scrollTop = chatWindowRef.current.scrollHeight;\n    }\n  }, [messages]);\n  const handleSend = async messageToSend => {\n    if (messageToSend.trim() === '') return;\n    setInput('');\n    resetTranscript();\n    const userMessage = {\n      text: messageToSend,\n      sender: 'user'\n    };\n    setMessages(prevMessages => [...prevMessages, userMessage]);\n    try {\n      const response = await fetch('http://localhost:5001/api/chat', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          message: messageToSend\n        })\n      });\n      const data = await response.json();\n      const botMessage = {\n        text: data.reply,\n        sender: 'bot'\n      };\n      setMessages(prevMessages => [...prevMessages, botMessage]);\n      window.speechSynthesis.cancel();\n      const utterance = new SpeechSynthesisUtterance(data.reply);\n      window.speechSynthesis.speak(utterance);\n    } catch (error) {\n      console.error('Error fetching bot reply:', error);\n      const errorMessage = {\n        text: 'Sorry, I am having trouble connecting.',\n        sender: 'bot'\n      };\n      setMessages(prevMessages => [...prevMessages, errorMessage]);\n    }\n  };\n  const handleTextSubmit = () => {\n    if (input.trim() === '') return;\n    handleSend(input);\n  };\n  const handleVoiceRecording = () => {\n    if (listening) {\n      SpeechRecognition.stopListening();\n      if (transcript.trim() !== '') {\n        handleSend(transcript);\n      }\n    } else {\n      resetTranscript();\n      SpeechRecognition.startListening();\n    }\n  };\n  if (!browserSupportsSpeechRecognition) {\n    return /*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"Sorry, your browser does not support speech recognition.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sidebar\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"new-chat-button\",\n        children: \"+ New Chat\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-window\",\n        ref: chatWindowRef,\n        children: messages.length === 0 ?\n        /*#__PURE__*/\n        // --- WELCOME SCREEN ---\n        _jsxDEV(\"div\", {\n          className: \"welcome-screen\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"BNI.\",\n            className: \"welcome-logo\",\n            alt: \"logo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"How can I help you today?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 13\n        }, this) :\n        // --- MESSAGES ---\n        messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `message-wrapper ${msg.sender}`,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"message\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"message-icon\",\n              children: msg.sender === 'user' ? /*#__PURE__*/_jsxDEV(UserIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 117,\n                columnNumber: 46\n              }, this) : /*#__PURE__*/_jsxDEV(BotIcon, {\n                logoSrc: \"/logo.png\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 117,\n                columnNumber: 61\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"message-content\",\n              children: /*#__PURE__*/_jsxDEV(ReactMarkdown, {\n                children: msg.text\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 120,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 17\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-input-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat-input\",\n          children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n            value: input,\n            onChange: e => setInput(e.target.value),\n            placeholder: listening ? \"Listening...\" : \"Ask BNI-ChatBot...\",\n            onKeyPress: e => {\n              if (e.key === 'Enter' && !e.shiftKey) {\n                e.preventDefault();\n                handleTextSubmit();\n              }\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleVoiceRecording,\n            className: `mic-button ${listening ? 'listening' : ''}`,\n            children: \"\\uD83C\\uDFA4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleTextSubmit,\n            className: \"send-button\",\n            disabled: !input.trim(),\n            children: \"\\u2191\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"footer-text\",\n          children: \"BNI-ChatBot can make mistakes. Consider checking important information.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"viF/vT3oelwSkTSq1pCR/hxIbMs=\", false, function () {\n  return [useSpeechRecognition];\n});\n_c3 = App;\nexport default App;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"UserIcon\");\n$RefreshReg$(_c2, \"BotIcon\");\n$RefreshReg$(_c3, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useRef","ReactMarkdown","SpeechRecognition","useSpeechRecognition","jsxDEV","_jsxDEV","UserIcon","width","height","viewBox","fill","xmlns","children","d","fileName","_jsxFileName","lineNumber","columnNumber","_c","BotIcon","logoSrc","src","alt","style","borderRadius","_c2","App","_s","messages","setMessages","input","setInput","chatWindowRef","transcript","listening","resetTranscript","browserSupportsSpeechRecognition","window","speechSynthesis","getVoices","current","scrollTop","scrollHeight","handleSend","messageToSend","trim","userMessage","text","sender","prevMessages","response","fetch","method","headers","body","JSON","stringify","message","data","json","botMessage","reply","cancel","utterance","SpeechSynthesisUtterance","speak","error","console","errorMessage","handleTextSubmit","handleVoiceRecording","stopListening","startListening","className","ref","length","map","msg","index","value","onChange","e","target","placeholder","onKeyPress","key","shiftKey","preventDefault","onClick","disabled","_c3","$RefreshReg$"],"sources":["C:/Users/dell/bnichat-bot/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport ReactMarkdown from 'react-markdown';\nimport SpeechRecognition, { useSpeechRecognition } from 'react-speech-recognition';\nimport './App.css';\n\n// --- SVG Icons for Messages ---\nconst UserIcon = () => (\n  <svg width=\"30\" height=\"30\" viewBox=\"0 0 24 24\" fill=\"#d9d9e9\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M12 12c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm0 2c-2.67 0-8 1.34-8 4v2h16v-2c0-2.66-5.33-4-8-4z\"/>\n  </svg>\n);\n\nconst BotIcon = ({ logoSrc }) => (\n  <img src={logoSrc} alt=\"bot icon\" style={{ width: '30px', height: '30px', borderRadius: '4px' }} />\n);\n\n\nfunction App() {\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState('');\n  const chatWindowRef = useRef(null);\n\n  const { transcript, listening, resetTranscript, browserSupportsSpeechRecognition } = useSpeechRecognition();\n\n  useEffect(() => {\n    window.speechSynthesis.getVoices();\n  }, []);\n\n  useEffect(() => {\n    setInput(transcript);\n  }, [transcript]);\n\n  // Auto-scroll to the bottom when new messages are added\n  useEffect(() => {\n    if (chatWindowRef.current) {\n      chatWindowRef.current.scrollTop = chatWindowRef.current.scrollHeight;\n    }\n  }, [messages]);\n\n  const handleSend = async (messageToSend) => {\n    if (messageToSend.trim() === '') return;\n\n    setInput('');\n    resetTranscript();\n\n    const userMessage = { text: messageToSend, sender: 'user' };\n    setMessages(prevMessages => [...prevMessages, userMessage]);\n    \n    try {\n      const response = await fetch('http://localhost:5001/api/chat', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ message: messageToSend }),\n      });\n\n      const data = await response.json();\n      const botMessage = { text: data.reply, sender: 'bot' };\n      setMessages(prevMessages => [...prevMessages, botMessage]);\n\n      window.speechSynthesis.cancel();\n      const utterance = new SpeechSynthesisUtterance(data.reply);\n      window.speechSynthesis.speak(utterance);\n\n    } catch (error) {\n      console.error('Error fetching bot reply:', error);\n      const errorMessage = { text: 'Sorry, I am having trouble connecting.', sender: 'bot' };\n      setMessages(prevMessages => [...prevMessages, errorMessage]);\n    }\n  };\n\n  const handleTextSubmit = () => {\n    if (input.trim() === '') return;\n    handleSend(input);\n  };\n\n  const handleVoiceRecording = () => {\n    if (listening) {\n      SpeechRecognition.stopListening();\n      if (transcript.trim() !== '') {\n        handleSend(transcript);\n      }\n    } else {\n      resetTranscript();\n      SpeechRecognition.startListening();\n    }\n  };\n\n  if (!browserSupportsSpeechRecognition) {\n    return <span>Sorry, your browser does not support speech recognition.</span>;\n  }\n\n  return (\n    <div className=\"App\">\n      {/* --- SIDEBAR --- */}\n      <div className=\"sidebar\">\n        <div className=\"new-chat-button\">\n          + New Chat\n        </div>\n        {/* You can map over a list of past conversations here */}\n      </div>\n\n      {/* --- MAIN CONTENT --- */}\n      <div className=\"main-content\">\n        <div className=\"chat-window\" ref={chatWindowRef}>\n          {messages.length === 0 ? (\n            // --- WELCOME SCREEN ---\n            <div className=\"welcome-screen\">\n              <img src=\"BNI.\" className=\"welcome-logo\" alt=\"logo\" />\n              <h2>How can I help you today?</h2>\n            </div>\n          ) : (\n            // --- MESSAGES ---\n            messages.map((msg, index) => (\n              <div key={index} className={`message-wrapper ${msg.sender}`}>\n                <div className=\"message\">\n                  <div className=\"message-icon\">\n                    {msg.sender === 'user' ? <UserIcon /> : <BotIcon logoSrc=\"/logo.png\" />}\n                  </div>\n                  <div className=\"message-content\">\n                    <ReactMarkdown>{msg.text}</ReactMarkdown>\n                  </div>\n                </div>\n              </div>\n            ))\n          )}\n        </div>\n        \n        {/* --- INPUT AREA --- */}\n        <div className=\"chat-input-container\">\n          <div className=\"chat-input\">\n            <textarea\n              value={input}\n              onChange={(e) => setInput(e.target.value)}\n              placeholder={listening ? \"Listening...\" : \"Ask BNI-ChatBot...\"}\n              onKeyPress={(e) => {\n                if (e.key === 'Enter' && !e.shiftKey) {\n                  e.preventDefault();\n                  handleTextSubmit();\n                }\n              }}\n            />\n            <button \n              onClick={handleVoiceRecording} \n              className={`mic-button ${listening ? 'listening' : ''}`}\n            >\n              🎤\n            </button>\n            <button onClick={handleTextSubmit} className=\"send-button\" disabled={!input.trim()}>\n              ↑\n            </button>\n          </div>\n          <p className=\"footer-text\">BNI-ChatBot can make mistakes. Consider checking important information.</p>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}