{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dell\\\\bnichat-bot\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport ReactMarkdown from 'react-markdown';\nimport SpeechRecognition, { useSpeechRecognition } from 'react-speech-recognition';\nimport './App.css';\n\n// --- SVG Icons (No changes here) ---\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserIcon = () => /*#__PURE__*/_jsxDEV(\"svg\", {\n  width: \"30\",\n  height: \"30\",\n  viewBox: \"0 0 24 24\",\n  fill: \"#d9d9e9\",\n  xmlns: \"http://www.w3.org/2000/svg\",\n  children: /*#__PURE__*/_jsxDEV(\"path\", {\n    d: \"M12 12c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm0 2c-2.67 0-8 1.34-8 4v2h16v-2c0-2.66-5.33-4-8-4z\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 124\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 7,\n  columnNumber: 26\n}, this);\n_c = UserIcon;\nconst BotIcon = ({\n  logoSrc\n}) => /*#__PURE__*/_jsxDEV(\"img\", {\n  src: logoSrc,\n  alt: \"bot icon\",\n  style: {\n    width: '30px',\n    height: '30px',\n    borderRadius: '4px'\n  }\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 8,\n  columnNumber: 36\n}, this);\n_c2 = BotIcon;\nconst MicrophoneIcon = () => /*#__PURE__*/_jsxDEV(\"svg\", {\n  width: \"24\",\n  height: \"24\",\n  viewBox: \"0 0 24 24\",\n  fill: \"none\",\n  xmlns: \"http://www.w3.org/2000/svg\",\n  stroke: \"currentColor\",\n  strokeWidth: \"1.5\",\n  strokeLinecap: \"round\",\n  strokeLinejoin: \"round\",\n  children: [/*#__PURE__*/_jsxDEV(\"path\", {\n    d: \"M12 1a3 3 0 0 0-3 3v8a3 3 0 0 0 6 0V4a3 3 0 0 0-3-3z\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 212\n  }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n    d: \"M19 10v2a7 7 0 0 1-14 0v-2\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 282\n  }, this), /*#__PURE__*/_jsxDEV(\"line\", {\n    x1: \"12\",\n    y1: \"19\",\n    x2: \"12\",\n    y2: \"22\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 326\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 9,\n  columnNumber: 32\n}, this);\n_c3 = MicrophoneIcon;\nfunction App() {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState('');\n  const chatWindowRef = useRef(null);\n\n  // --- 1. MODIFIED SPEECH RECOGNITION SETUP ---\n  const {\n    transcript,\n    listening,\n    resetTranscript,\n    browserSupportsSpeechRecognition\n  } = useSpeechRecognition();\n\n  // This effect will run when 'listening' changes from true to false\n  useEffect(() => {\n    // This condition means the listening has just stopped\n    if (!listening && transcript) {\n      // Automatically send the transcript as a voice message\n      handleSend(transcript, true);\n    }\n  }, [listening]); // The dependency array ensures this runs only when 'listening' changes\n  // --- END OF MODIFICATION ---\n\n  useEffect(() => {\n    window.speechSynthesis.getVoices();\n  }, []);\n  useEffect(() => {\n    setInput(transcript);\n  }, [transcript]);\n  useEffect(() => {\n    if (chatWindowRef.current) {\n      chatWindowRef.current.scrollTop = chatWindowRef.current.scrollHeight;\n    }\n  }, [messages]);\n  const handleNewChat = () => {\n    setMessages([]);\n    resetTranscript();\n    setInput('');\n  };\n  const handleSend = async (messageToSend, isVoiceInput = false) => {\n    if (messageToSend.trim() === '') return;\n    setInput('');\n    resetTranscript();\n    const userMessage = {\n      text: messageToSend,\n      sender: 'user'\n    };\n    setMessages(prevMessages => [...prevMessages, userMessage]);\n    try {\n      const response = await fetch('http://localhost:5001/api/chat', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          message: messageToSend\n        })\n      });\n      const data = await response.json();\n      const botMessage = {\n        text: data.reply,\n        sender: 'bot'\n      };\n      setMessages(prevMessages => [...prevMessages, botMessage]);\n      if (isVoiceInput) {\n        window.speechSynthesis.cancel();\n        const utterance = new SpeechSynthesisUtterance(data.reply);\n        window.speechSynthesis.speak(utterance);\n      }\n    } catch (error) {\n      console.error('Error fetching bot reply:', error);\n      const errorMessage = {\n        text: 'Sorry, I am having trouble connecting.',\n        sender: 'bot'\n      };\n      setMessages(prevMessages => [...prevMessages, errorMessage]);\n    }\n  };\n  const handleTextSubmit = () => {\n    if (input.trim() === '') return;\n    handleSend(input, false);\n  };\n\n  // --- 2. SIMPLIFIED VOICE RECORDING FUNCTION ---\n  const handleVoiceRecording = () => {\n    if (listening) {\n      // If already listening, stop it. This allows manual stopping.\n      SpeechRecognition.stopListening();\n    } else {\n      // If not listening, clear any old transcript and start.\n      resetTranscript();\n      // 'continuous: false' means it will stop automatically when you pause.\n      SpeechRecognition.startListening({\n        continuous: false\n      });\n    }\n  };\n  // --- END OF SIMPLIFICATION ---\n\n  if (!browserSupportsSpeechRecognition) {\n    return /*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"Sorry, your browser does not support speech recognition.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sidebar\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"new-chat-button\",\n        onClick: handleNewChat,\n        children: \"+ New Chat\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-window\",\n        ref: chatWindowRef,\n        children: messages.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"welcome-screen\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"BNI.png\",\n            className: \"welcome-logo\",\n            alt: \"logo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"How can I help you today?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 13\n        }, this) : messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `message-wrapper ${msg.sender}`,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"message\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"message-icon\",\n              children: msg.sender === 'user' ? /*#__PURE__*/_jsxDEV(UserIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 130,\n                columnNumber: 46\n              }, this) : /*#__PURE__*/_jsxDEV(BotIcon, {\n                logoSrc: \"BNI.png\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 130,\n                columnNumber: 61\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"message-content\",\n              children: /*#__PURE__*/_jsxDEV(ReactMarkdown, {\n                children: msg.text\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 133,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 17\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-input-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat-input\",\n          children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n            value: input,\n            onChange: e => setInput(e.target.value),\n            placeholder: listening ? \"Listening...\" : \"Ask BNI-ChatBot...\",\n            onKeyPress: e => {\n              if (e.key === 'Enter' && !e.shiftKey) {\n                e.preventDefault();\n                handleTextSubmit();\n              }\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleVoiceRecording,\n            className: `mic-button ${listening ? 'listening' : ''}`,\n            children: /*#__PURE__*/_jsxDEV(MicrophoneIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleTextSubmit,\n            className: \"send-button\",\n            disabled: !input.trim(),\n            children: \"\\u2191\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"footer-text\",\n          children: \"BNI-ChatBot can make mistakes. Consider checking important information.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 112,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"ackpAheUC3bj1Y4/LYmtz2q5yLw=\", false, function () {\n  return [useSpeechRecognition];\n});\n_c4 = App;\nexport default App;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"UserIcon\");\n$RefreshReg$(_c2, \"BotIcon\");\n$RefreshReg$(_c3, \"MicrophoneIcon\");\n$RefreshReg$(_c4, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useRef","ReactMarkdown","SpeechRecognition","useSpeechRecognition","jsxDEV","_jsxDEV","UserIcon","width","height","viewBox","fill","xmlns","children","d","fileName","_jsxFileName","lineNumber","columnNumber","_c","BotIcon","logoSrc","src","alt","style","borderRadius","_c2","MicrophoneIcon","stroke","strokeWidth","strokeLinecap","strokeLinejoin","x1","y1","x2","y2","_c3","App","_s","messages","setMessages","input","setInput","chatWindowRef","transcript","listening","resetTranscript","browserSupportsSpeechRecognition","handleSend","window","speechSynthesis","getVoices","current","scrollTop","scrollHeight","handleNewChat","messageToSend","isVoiceInput","trim","userMessage","text","sender","prevMessages","response","fetch","method","headers","body","JSON","stringify","message","data","json","botMessage","reply","cancel","utterance","SpeechSynthesisUtterance","speak","error","console","errorMessage","handleTextSubmit","handleVoiceRecording","stopListening","startListening","continuous","className","onClick","ref","length","map","msg","index","value","onChange","e","target","placeholder","onKeyPress","key","shiftKey","preventDefault","disabled","_c4","$RefreshReg$"],"sources":["C:/Users/dell/bnichat-bot/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport ReactMarkdown from 'react-markdown';\nimport SpeechRecognition, { useSpeechRecognition } from 'react-speech-recognition';\nimport './App.css';\n\n// --- SVG Icons (No changes here) ---\nconst UserIcon = () => ( <svg width=\"30\" height=\"30\" viewBox=\"0 0 24 24\" fill=\"#d9d9e9\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M12 12c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm0 2c-2.67 0-8 1.34-8 4v2h16v-2c0-2.66-5.33-4-8-4z\"/></svg> );\nconst BotIcon = ({ logoSrc }) => ( <img src={logoSrc} alt=\"bot icon\" style={{ width: '30px', height: '30px', borderRadius: '4px' }} /> );\nconst MicrophoneIcon = () => ( <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" stroke=\"currentColor\" strokeWidth=\"1.5\" strokeLinecap=\"round\" strokeLinejoin=\"round\"><path d=\"M12 1a3 3 0 0 0-3 3v8a3 3 0 0 0 6 0V4a3 3 0 0 0-3-3z\"></path><path d=\"M19 10v2a7 7 0 0 1-14 0v-2\"></path><line x1=\"12\" y1=\"19\" x2=\"12\" y2=\"22\"></line></svg> );\n\n\nfunction App() {\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState('');\n  const chatWindowRef = useRef(null);\n\n  // --- 1. MODIFIED SPEECH RECOGNITION SETUP ---\n  const {\n    transcript,\n    listening,\n    resetTranscript,\n    browserSupportsSpeechRecognition\n  } = useSpeechRecognition();\n\n  // This effect will run when 'listening' changes from true to false\n  useEffect(() => {\n    // This condition means the listening has just stopped\n    if (!listening && transcript) {\n      // Automatically send the transcript as a voice message\n      handleSend(transcript, true);\n    }\n  }, [listening]); // The dependency array ensures this runs only when 'listening' changes\n  // --- END OF MODIFICATION ---\n\n  useEffect(() => {\n    window.speechSynthesis.getVoices();\n  }, []);\n\n  useEffect(() => {\n    setInput(transcript);\n  }, [transcript]);\n\n  useEffect(() => {\n    if (chatWindowRef.current) {\n      chatWindowRef.current.scrollTop = chatWindowRef.current.scrollHeight;\n    }\n  }, [messages]);\n\n  const handleNewChat = () => {\n    setMessages([]);\n    resetTranscript();\n    setInput('');\n  };\n\n  const handleSend = async (messageToSend, isVoiceInput = false) => {\n    if (messageToSend.trim() === '') return;\n\n    setInput('');\n    resetTranscript();\n\n    const userMessage = { text: messageToSend, sender: 'user' };\n    setMessages(prevMessages => [...prevMessages, userMessage]);\n    \n    try {\n      const response = await fetch('http://localhost:5001/api/chat', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ message: messageToSend }),\n      });\n\n      const data = await response.json();\n      const botMessage = { text: data.reply, sender: 'bot' };\n      setMessages(prevMessages => [...prevMessages, botMessage]);\n\n      if (isVoiceInput) {\n        window.speechSynthesis.cancel();\n        const utterance = new SpeechSynthesisUtterance(data.reply);\n        window.speechSynthesis.speak(utterance);\n      }\n\n    } catch (error) {\n      console.error('Error fetching bot reply:', error);\n      const errorMessage = { text: 'Sorry, I am having trouble connecting.', sender: 'bot' };\n      setMessages(prevMessages => [...prevMessages, errorMessage]);\n    }\n  };\n\n  const handleTextSubmit = () => {\n    if (input.trim() === '') return;\n    handleSend(input, false);\n  };\n\n  // --- 2. SIMPLIFIED VOICE RECORDING FUNCTION ---\n  const handleVoiceRecording = () => {\n    if (listening) {\n      // If already listening, stop it. This allows manual stopping.\n      SpeechRecognition.stopListening();\n    } else {\n      // If not listening, clear any old transcript and start.\n      resetTranscript();\n      // 'continuous: false' means it will stop automatically when you pause.\n      SpeechRecognition.startListening({ continuous: false });\n    }\n  };\n  // --- END OF SIMPLIFICATION ---\n\n  if (!browserSupportsSpeechRecognition) {\n    return <span>Sorry, your browser does not support speech recognition.</span>;\n  }\n\n  return (\n    <div className=\"App\">\n      <div className=\"sidebar\">\n        <div className=\"new-chat-button\" onClick={handleNewChat}>\n          + New Chat\n        </div>\n      </div>\n      <div className=\"main-content\">\n        <div className=\"chat-window\" ref={chatWindowRef}>\n          {messages.length === 0 ? (\n            <div className=\"welcome-screen\">\n              <img src=\"BNI.png\" className=\"welcome-logo\" alt=\"logo\" />\n              <h2>How can I help you today?</h2>\n            </div>\n          ) : (\n            messages.map((msg, index) => (\n              <div key={index} className={`message-wrapper ${msg.sender}`}>\n                <div className=\"message\">\n                  <div className=\"message-icon\">\n                    {msg.sender === 'user' ? <UserIcon /> : <BotIcon logoSrc=\"BNI.png\" />}\n                  </div>\n                  <div className=\"message-content\">\n                    <ReactMarkdown>{msg.text}</ReactMarkdown>\n                  </div>\n                </div>\n              </div>\n            ))\n          )}\n        </div>\n        <div className=\"chat-input-container\">\n          <div className=\"chat-input\">\n            <textarea\n              value={input}\n              onChange={(e) => setInput(e.target.value)}\n              placeholder={listening ? \"Listening...\" : \"Ask BNI-ChatBot...\"}\n              onKeyPress={(e) => {\n                if (e.key === 'Enter' && !e.shiftKey) { e.preventDefault(); handleTextSubmit(); }\n              }}\n            />\n            <button \n              onClick={handleVoiceRecording} \n              className={`mic-button ${listening ? 'listening' : ''}`}\n            >\n              <MicrophoneIcon />\n            </button>\n            <button onClick={handleTextSubmit} className=\"send-button\" disabled={!input.trim()}>\n              ↑\n            </button>\n          </div>\n          <p className=\"footer-text\">BNI-ChatBot can make mistakes. Consider checking important information.</p>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}